<?xml version="1.0" encoding="UTF-8"?>
<launch>

    <arg name="tag" default="false"/>

    <include file="$(find safer_stack)/launch/sand_mine.launch"></include>

    <include file="$(find safer_stack)/launch/spawn_husky.launch"></include>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find safer_stack)/rviz/viz_all.rviz" output="screen"/>

    <node ns="bumblebee2" pkg="stereo_image_proc" name="stereo_image_proc" type="stereo_image_proc">
        <param name="stereo_algorithm" value="1"/>
        <param name="prefilter_size" value="9"/>
        <param name="disparity_range" value="64"/>
        <param name="correlation_window_size" value="15"/>
        <param name="min_disparity" value="0" />
        <param name="speckle_size" value="100" />
    </node>

    <!-- <node pkg="safer_stack" name="tf_pointclouds" type="tf_pointclouds.py" /> -->

    <!--  
     start nodelet manager and driver nodelets
    <include file="$(find velodyne_driver)/launch/nodelet_manager.launch" />

     start transform nodelet
    <include file="$(find velodyne_pointcloud)/launch/transform_nodelet.launch">
        <arg name="calibration"
            value="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
    </include>
     -->

    <!-- <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager"> 
    </node>

    <node pkg="nodelet" type="nodelet" name="outlier_filter" args="load pcl/RadiusOutlierRemoval nodelet_manager" >
        <remap from="~input" to="/bumblebee2/points2" />
        <remap from="~output" to="/points2_filtered" />
    </node> -->

    <!-- <node pkg="nodelet" type="nodelet" name="outlier_filter" args="load pcl/StatisticalOutlierRemoval nodelet_manager" >
        <param name="mean_k" type="int" value="2" />
        <param name="stddev" type="double" value="0.2" />
        <param name="negative" type="bool" value="false" />

        <remap from="~input" to="/bumblebee2/points2" />
        <remap from="~output" to="/points2_filtered" />
    </node> -->

    
    <group if="$(arg tag)">
        <include file="$(find safer_stack)/launch/spawn_apriltag.launch"></include>
        <node pkg="safer_stack" name="distance_tag" type="distance_tag.py" output="screen"/>
        <node pkg="safer_stack" name="interface" type="interface.py" output="screen">
            <remap from="/image_edge_highlighted" to="/bumblebee2/left/image_raw" />
        </node>
    </group>

    <group unless="$(arg tag)">
        <node pkg="safer_stack" name="interface" type="interface.py" output="screen"/>
    </group>

</launch>